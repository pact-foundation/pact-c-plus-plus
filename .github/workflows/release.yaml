name: Release Consumer Project

on:
  release:
    types: [published]

env:
  CONAN_REVISIONS_ENABLED: 1

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cmake --version
      - run: python --version
      - run: mkdir -p consumer/build
      - name: Install conan
        run: |
          pip3 install wheel setuptools
          pip3 install conan
      - name: Check conan version
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan --version
      - run: mkdir -p consumer/build
      - name: conan install dependencies
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan profile new default --detect
          conan remote add pact-foundation https://pactfoundation.jfrog.io/artifactory/api/conan/pactfoundation-conan
          conan profile update settings.compiler.cppstd=17 default
          conan install .. --build missing
        working-directory: consumer/build
        env:
          CC: gcc-9
          CXX: g++-9
      - name: Build library
        run: |
          cmake ..
          cmake --build .
          mkdir -p artifacts
          gzip -c src/lib/libpact-cpp-consumer.a > artifacts/libpact-cpp-consumer.a.gz
          openssl dgst -sha256 -r artifacts/libpact-cpp-consumer.a.gz > artifacts/libpact-cpp-consumer.a.gz.sha256
        working-directory: consumer/build
      - name: Build conan package
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan user -p $APIKEY -r pact-foundation ronald.holshausen@gmail.com
          conan create . pact/beta
          VERSION=$(conan inspect . --raw version)
          conan upload pact_cpp_consumer/$VERSION@pact/beta --all -r=pact-foundation
        working-directory: consumer
        env:
          APIKEY: ${{ secrets.JFROG_ACCESS_TOKEN }}
          CC: gcc-9
          CXX: g++-9
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: cmake --version
      - run: python --version
      - name: Install conan
        run: |
          pip3 install wheel setuptools
          pip3 install conan
      - run: mkdir consumer\build
      - name: conan install dependencies Windows
        run: |
          conan remote add pact-foundation https://pactfoundation.jfrog.io/artifactory/api/conan/pactfoundation-conan
          conan profile update settings.compiler.cppstd=17 default
          conan install .. --build missing
        working-directory: consumer/build
      - name: Build library
        run: |
          cmake ..
          cmake --build .
          mkdir -p artifacts
          gzip -c src/lib/pact-cpp-consumer.lib > artifacts/pact-cpp-consumer.lib.gz
          openssl dgst -sha256 -r src/lib/pact-cpp-consumer.lib.gz > artifacts/pact-cpp-consumer.lib.gz.sha256
        working-directory: consumer/build
      - name: Build conan package
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan user -p $APIKEY -r pact-foundation ronald.holshausen@gmail.com
          conan create . pact/beta
          VERSION=$(conan inspect . --raw version)
          conan upload pact_cpp_consumer/$VERSION@pact/beta --all -r=pact-foundation
        working-directory: consumer
        shell: bash
        env:
          APIKEY: ${{ secrets.JFROG_ACCESS_TOKEN }}
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: cmake --version
      - run: python --version
      - name: Install conan
        run: |
          pip3 install wheel setuptools
          pip3 install conan
      - name: Check conan version
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan --version
      - run: mkdir -p consumer/build
      - name: conan install dependencies
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan profile new default --detect
          conan remote add pact-foundation https://pactfoundation.jfrog.io/artifactory/api/conan/pactfoundation-conan
          conan profile update settings.compiler.cppstd=17 default
          conan install .. --build missing
        working-directory: consumer/build
      - name: Build library
        run: |
          cmake ..
          cmake --build .
          mkdir -p artifacts
          gzip -c src/lib/libpact-cpp-consumer.a > artifacts/libpact-cpp-consumer.a.gz
          openssl dgst -sha256 -r artifacts/libpact-cpp-consumer.a.gz > artifacts/libpact-cpp-consumer.a.gz.sha256
        working-directory: consumer/build
      - name: Build conan package
        run: |
          export PATH=$PATH:/home/runner/.local/bin
          conan user -p $APIKEY -r pact-foundation ronald.holshausen@gmail.com
          conan create . pact/beta
          VERSION=$(conan inspect . --raw version)
          conan upload pact_cpp_consumer/$VERSION@pact/beta --all -r=pact-foundation
        working-directory: consumer
        env:
          APIKEY: ${{ secrets.JFROG_ACCESS_TOKEN }}
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

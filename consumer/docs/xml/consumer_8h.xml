<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="consumer_8h" kind="file" language="C++">
    <compoundname>consumer.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="no">pact.h</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">optional</includes>
    <includes local="no">functional</includes>
    <includes refid="matchers_8h" local="yes">matchers.h</includes>
    <includedby refid="consumer_8cpp" local="yes">src/consumer.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="6">
        <label>filesystem</label>
      </node>
      <node id="11">
        <label>boost/throw_exception.hpp</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="5">
        <label>pact.h</label>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="1">
        <label>include/consumer.h</label>
        <link refid="consumer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>matchers.h</label>
        <link refid="matchers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unordered_map</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/consumer.cpp</label>
        <link refid="consumer_8cpp"/>
      </node>
      <node id="1">
        <label>include/consumer.h</label>
        <link refid="consumer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpact__consumer_1_1MockServerHandle" prot="public">pact_consumer::MockServerHandle</innerclass>
    <innerclass refid="classpact__consumer_1_1PactTestResult" prot="public">pact_consumer::PactTestResult</innerclass>
    <innerclass refid="classpact__consumer_1_1Pact" prot="public">pact_consumer::Pact</innerclass>
    <innerclass refid="classpact__consumer_1_1Interaction" prot="public">pact_consumer::Interaction</innerclass>
    <innernamespace refid="namespacepact__consumer">pact_consumer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pact.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matchers_8h" kindref="compound">matchers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepact__consumer" kindref="compound">pact_consumer</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepact__consumer_1aaa6b9d5d2099c6ad833338cb2c1d4b11" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interaction;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classpact__consumer_1_1MockServerHandle" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1MockServerHandle" kindref="compound">MockServerHandle</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a26c264a9d9c1a32d761363a5f6cf85c0" kindref="member">MockServerHandle</ref>(PactHandle);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a515457a59d2e3a74e22ec558a8e5a490" kindref="member">~MockServerHandle</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a5956a6aa4afb3cb782dae4ed58f7e5ad" kindref="member">started_ok</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a7b9177aab903fca361cac6be60f2a7cc" kindref="member">get_url</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="classpact__consumer_1_1MockServerHandle_1ad3109a5b065ceac4e83e901c05625562" kindref="member">get_port</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>port;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="52" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca59d67210ddbad0d51681661dd9c240be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca59d67210ddbad0d51681661dd9c240be" kindref="member">Mismatches</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="53" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68cac32b44b8a1a75d9d00bcfb1e177684fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68cac32b44b8a1a75d9d00bcfb1e177684fb" kindref="member">UserCodeFailed</ref><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="54" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca2af45b15140f31c228c6fee2cf6317c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca2af45b15140f31c228c6fee2cf6317c2" kindref="member">PactFileError</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca8ae50beaa972c0fda0fef93885f811ea" kindref="member">MockServerFailed</ref><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>3)</highlight></codeline>
<codeline lineno="56" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca8ae50beaa972c0fda0fef93885f811ea" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classpact__consumer_1_1PactTestResult" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1PactTestResult" kindref="compound">PactTestResult</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactTestResult_1ad864d8a498509ff5b4bfa25eaf490a6c" kindref="member">PactTestResult</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state,<sp/>std::string<sp/>message);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state,<sp/>std::string<sp/>message,<sp/>std::string<sp/>ex);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1af52c0d3521914b0398d0bc0d54cbd1a9" kindref="member">is_ok</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1ad559f0f824c26a6fd5f6c6b1fa89932a" kindref="member">display_errors</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>messages;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;std::string&gt;<sp/>ex;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classpact__consumer_1_1Pact" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Pact_1a907de956f18c074634ceba0980fa8630" kindref="member">Pact</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>consumer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a630248129b4a610fd15d94d08c6fb6f5" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a630248129b4a610fd15d94d08c6fb6f5" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>parameters)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a05713ce4758ee154989b327c686dc18d" kindref="member">uponReceiving</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactTestResult" kindref="compound">PactTestResult</ref><sp/><ref refid="classpact__consumer_1_1Pact_1ab1f98bc36f5865fcc5fb1fbcc20220ea" kindref="member">run_test</ref>(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1MockServerHandle" kindref="compound">MockServerHandle</ref>*)&gt;<sp/>callback)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classpact__consumer_1_1Pact_1a5e142f1242ac87124aa4d8f880bcd4b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PactHandle<sp/><ref refid="classpact__consumer_1_1Pact_1a5e142f1242ac87124aa4d8f880bcd4b3" kindref="member">pact</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classpact__consumer_1_1Pact_1a2d71145b2d9394a13b2ec104b031cdd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classpact__consumer_1_1Pact_1a2d71145b2d9394a13b2ec104b031cdd2" kindref="member">pact_directory</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>consumer;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>provider;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classpact__consumer_1_1Interaction" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction_1adfdeefe452d43765c863764c8010dacb" kindref="member">Interaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref>*<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ab317881a13f364c21ba4d773103f6fa9" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ab317881a13f364c21ba4d773103f6fa9" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>parameters)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a4d6a8acadad3b486a3996a5fd4819be2" kindref="member">uponReceiving</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ac29f5f3c8c0dfe941e00bee09334b341" kindref="member">withRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a35cdc26f67b6c97167b49e270a68d59c" kindref="member">withQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;&amp;<sp/>query)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a7cb127ccade3facb0b20655e38d939d1" kindref="member">withHeaders</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;&amp;<sp/>headers)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1adb859362ac2bdad9bbd0d2f6039c94cd" kindref="member">withBody</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>body,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1abeb14a7a082e64f78644d9803825e0cb" kindref="member">withJsonBody</ref>(<ref refid="classpact__consumer_1_1matchers_1_1IMatcher_1a36aa47dbb9f50f5d8432977bc7ae9a5b" kindref="member">pact_consumer::matchers::IMatcher::Ptr</ref><sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a75c38b21021c4f643efb1d8370f59960" kindref="member">withBinaryFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path&amp;<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a85284f4436485cf03b70f1db27df02b8" kindref="member">withMultipartFileUpload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>part_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path&amp;<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1adb4b399b152b384682d17436ac648d45" kindref="member">willRespondWith</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>status)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a193531af24474f18bceda3a4c4d0ddb4" kindref="member">withResponseHeaders</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;&amp;<sp/>headers)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a48ff23f6e9f43f487125088ff0921b9e" kindref="member">withResponseBody</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>body,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a82bea9bd7fd64a0ae56924c086891863" kindref="member">withResponseJsonBody</ref>(<ref refid="classpact__consumer_1_1matchers_1_1IMatcher_1a36aa47dbb9f50f5d8432977bc7ae9a5b" kindref="member">pact_consumer::matchers::IMatcher::Ptr</ref><sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a52a3088b74d645bd57704a38d6e7da8e" kindref="member">withResponseBinaryFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path&amp;<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a1ccff8adb3ce7581e9dba80fc8ee0ffc" kindref="member">withResponseMultipartFileUpload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>part_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>content_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path&amp;<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classpact__consumer_1_1Interaction_1a41c538141355d45d41736d455d5870dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>InteractionHandle<sp/><ref refid="classpact__consumer_1_1Interaction_1a41c538141355d45d41736d455d5870dc" kindref="member">interaction</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>description;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref>*<sp/>pact;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/consumer.h"/>
  </compounddef>
</doxygen>
